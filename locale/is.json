{"C":{"plural-forms":"nplurals=2; plural=(n != 1);","messages":{"Desktop":{"*":["Application\n\n\nSkjáborðsforrit"]},"Theme":{"*":[": \"Introduction to Programming\"\n\n\nÞema: \"Inngangur í Forritun\"\n\nForritun er ferlið við að skrifa og þýða kóða til að stjórna tölvum og öðrum tækjum. Það er mikilvægt að hafa skilning á forritun til að geta búið til hugbúnað og veflausnir sem uppfylla þarfir notenda.\n\nÍ þessari þemu munum við kynna grundvallaratriði forritunar og það sem þú þarft að vita til að byrja að læra. Við munum skoða helstu forritunarmál og tæknilega skjölun, sem eru lykilatriði í að skrifa og skilja kóða.\n\nForritun er flókið og stöðugt breytist, en með þessari þemu áttu að fá góðan byrjun á leiðinni til að verða forritunarexpert."]},"Configuration":{"*":["file\n\nStillingaskrá\n\nStillingaskrá er skrá sem inniheldur stillingar og gildi sem stýra hegðun forrits eða kerfis. Þessi skrá er oft notað til að breyta og stilla virkni forrits eða kerfis án þess að þurfa að endurhlaða eða endurbyggja það. Stillingaskráin er yfirleitt skrifuð í textaformi og inniheldur yfirleitt lykilorð og gildi sem eru notað til að búa til og stjórna mismunandi stillingar. Þessar stillingar geta verið tengdar við mismunandi forrit eða kerfi og eru mikilvægar fyrir að aðlaga og búa til sérsniðna umhverfi fyrir notendur. Þegar forrit eða kerfi er keyrt, les það stillingaskrána til að fá upplýsingar um hvernig það á að virka og hvaða gildi á að nota. \n\nStillingaskrá\n\nStillingaskrá er skjal sem inniheldur stillingar og gildi sem stjórna hegðun forrits eða kerfis. Þessi skjal er oft notað til að breyta og stilla virkni forrits eða kerfis án þess að þurfa að endurhlaða eða endurbyggja það. Stillingaskráin er yfirleitt skrifuð í textaformi og inniheldur yfirleitt lykilorð og gildi sem eru notað til að búa til og stjórna mismunandi stillingar. Þessar stillingar geta verið tengdar við mismunandi forrit eða kerfi og eru mikilvægar til að aðlaga og búa til sérsniðna umhverfi fyrir notendur. Þegar forrit eða kerfi er keyrt, les það stillingaskrána til að fá upplýsingar um hvernig það á að virka og hvaða gildi á að nota."]},"You've used this desktop before, do you want to restore your customization or use the original configuration?":{"*":["Þú hefur notað þennan skjáborð áður, viltu endurheimta þína sérsniðnu stillingu eða nota upprunalega stillingu?"]},"Original":{"*":["text:\n\n\"Arrays are a fundamental data structure in programming. They are used to store a collection of elements of the same data type. Arrays can be accessed and manipulated using index numbers, which represent the position of each element in the array. Arrays are commonly used for tasks such as sorting, searching, and storing data in memory.\"\n\n\n\"Fylki eru grundvallar gagnagrind í forritun. Þau eru notuð til að geyma safn af stökum af sama gagnagerð. Fylki er hægt að nálgast og breyta með því að nota númer á vísunum, sem táknar staðsetningu hvers staks í fylkinu. Fylki eru oft notuð fyrir verkefni eins og raða, leita og geyma gögn í minni.\""]},"Restore":{"*":["the database\n\nEndurheimta gagnagrunninn"]},"Applying":{"*":["Filters\n\nAð nota síur\n\nSíur eru mikilvæg tæki í forritun sem hjálpa til við að sía og velja út ákveðin gögn eða hluti úr stórum mengi af upplýsingum. Þær eru einnig notuð til að bregðast við ákveðnum skilyrðum eða reglum og útiloka þannig óæskileg gögn eða hluti.\n\nTil að nota síur í forritun, þarf að skilgreina síurnar og þær skilyrði sem þær eiga að nota til að sía út gögn. Þetta er oft gert með því að nota forritunartækni eins og \"if\" setningar eða \"for\" lykkjur til að bregðast við ákveðnum skilyrðum og útiloka þannig óæskileg gögn eða hluti.\n\nÞegar síurnar eru rétt skilgreindar og notaðar, geta þær verið mjög gagnlegar í að auðvelda og hraða upp forritunarferlið. Þær geta einnig hjálpað til við að gera kóðann meira skiljanlegan og viðhaldaðan.\n\nÞað er mikilvægt að vera vandur við að nota síur og að skilja hvernig þær virka til að tryggja að þær séu rétt settar upp og að þær sía út þau gögn sem eru nauðsynleg í forritinu. Það er einnig gott að prófa síurnar reglulega og uppfæra þær eftir þörfum til að tryggja bestu mögulegu niðurstöður. \n\nAð nota síur\n\nSíur eru mikilvæg verkfæri í forritun sem hjálpa til við að sía og velja út ákveðin gögn eða hluti úr stórum mengi af upplýsingum. Þær eru einnig notuð til að bregðast við ákveðnum skilyrðum eða reglum og útiloka þannig óæskileg gögn eða hluti.\n\nTil að nota síur í forritun, þarf að skilgreina síurnar og þær skilyrði sem þær eiga að nota til að sía út gögn. Þetta er oft gert með því að nota forritunartækni eins og \"if\" setningar eða \"for\" lykkjur til að bregðast við ákveðnum skilyrðum og útiloka þannig óæskileg gögn eða hluti.\n\nÞegar síurnar eru rétt skilgreindar og notaðar, geta þær verið mjög gagnlegar í að auðvelda og hraða upp forritunarferlið. Þær geta einnig hjálpað til við að gera kóðann skiljanlegri og viðhaldaðan.\n\nMikilvægt er að vera vandur við að nota síur og að skilja hvernig þær virka til að tryggja að þær séu rétt settar upp og að þær sía út þau gögn sem eru nauðsynleg í forritinu. Það er einnig gott að prófa síurnar reglulega og uppfæra þær eftir þörfum til að tryggja bestu mögulegu niðurstöður."]},"The settings have been changed. To apply them throughout the system, log off and log in again.":{"*":["Stillingarnar hafa verið breyttar. Til að beita þeim í gegnum kerfið, skráðu þig út og aftur inn."]},"OK":{"*":[", let's get started with our programming project. First, we need to define a variable to store our user's name.\n\nAllt, byrjum á forritunarverkefninu okkar. Fyrst þurfum við að skilgreina breytu til að geyma nafn notandans okkar."]}}}}