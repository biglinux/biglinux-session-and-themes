#!/bin/bash


STARTPLASMA=startplasma-x11

if [ "$1" = "wayland" ]; then
    STARTPLASMA=startplasma-wayland
else
    export GDK_BACKEND=x11
fi


# Virtualization fix open
if [ "$(lspci | grep -i vga | grep -i vmware)" != "" ]; then
    kwriteconfig5 --file ~/.config/kded5rc --group Module-kscreen --key autoload false
fi
# Virtualization fix close

if [ ! -e "$HOME/.kdebiglinux/lastlogin" ]; then
    change-plasma-theme --apply $(cut -f2 -d" " /etc/big_desktop_changed) quiet
fi


nowlogin="$(cat "$HOME/.kdebiglinux/lastused")"
#ultimo login
lastlogin=$(cat "$HOME/.kdebiglinux/lastlogin")


# Copy config from skel if needed
# if [ ! -e "$HOME/.kdebiglinux/$nowlogin" ]; then
#     cp -Rf "/etc/skel/.kdebiglinux/$nowlogin" "$HOME/.kdebiglinux/$nowlogin"
#     mkdir -p "$HOME/.kdebiglinux/$nowlogin"
# fi

#Link from wallpaper to ksplash
ln -sf "$(grep '\[Wallpaper\]' -A2 -m1 ~/.config/plasma-org.kde.plasma.desktop-appletsrc | grep -m1 "Image=" | sed 's|Image=file://||g'
/usr/share/wallpapers/BigLinux01.jpg)" /tmp/bigksplash.jpg
chmod 777 /tmp/bigksplash.jpg

feh --bg-fill "/tmp/bigksplash.jpg" &

# Fix full screen when switch desktop
if [ "$nowlogin" != "$lastlogin" ]; then
    if [ "$(cat "$HOME/.config/kwin_maximized_disable")" = "1" ]; then
        sed -i 's|"custom_chrome_frame":true|"custom_chrome_frame":false|g' ~/.config/chromium/Default/Preferences ~/.config/google-chrome/Default/Preferences ~/.config/BraveSoftware/Brave-Browser/Default/Preferences
        sed -i 's|user_pref("browser.tabs.InTitlebar", 1);|user_pref("browser.tabs.InTitlebar", 0);|g' ~/.mozilla/firefox/*.default/prefs.js
        #Kwin
        sed -i '/BorderlessMaximizedWindows=false/d' ~/.config/kwinrc
    else
        #Chromium Brave Chrome
        sed -i 's|"custom_chrome_frame":false|"custom_chrome_frame":true|g' ~/.config/chromium/Default/Preferences ~/.config/google-chrome/Default/Preferences ~/.config/BraveSoftware/Brave-Browser/Default/Preferences
        #Firefox
        sed -i 's|user_pref("browser.tabs.InTitlebar", 0);|user_pref("browser.tabs.InTitlebar", 1);|g' ~/.mozilla/firefox/*.default/prefs.js
        #Menubar to kde apps
        sed -i '/MenuBar=Disabled/d' ~/.config/okularrc
        #Kwin
        sed -i '/BorderlessMaximizedWindows=true/d' ~/.config/kwinrc
    fi
fi

echo "$nowlogin" > "$HOME/.kdebiglinux/lastlogin"

if [ ! -e "$HOME/.big_performance" ]; then
    if [ "$(cat /etc/default-performance-biglinux)" = "0" ]; then
        /usr/share/bigbashview/bcc/apps/biglinux-themes-gui/normal.run quiet
    fi

    if [ "$(cat /etc/default-performance-biglinux)" = "1" ]; then
        /usr/share/bigbashview/bcc/apps/biglinux-themes-gui/optimized.run quiet
    fi

    if [ "$(cat /etc/default-performance-biglinux)" = "2" ]; then
        /usr/share/bigbashview/bcc/apps/biglinux-themes-gui/performance.run quiet
    fi
fi

# Theme in first login
first-login-theme

if [ "$(grep -i 'SingleClick=' ~/.config/kdeglobals)" = "" ]; then
    kwriteconfig5 --group KDE --key SingleClick true
fi

# Fix ssh agent
if [ -z "$SSH_AGENT_PID" ]; then
  eval "$(ssh-agent -s)"
fi


# Fix dolphin and konsole size

RESOLUTION="$(xdpyinfo | awk '/dimensions/ {print $2}')"
SCREEN="$(xrandr | grep 'connected primary' | cut -f1 -d" ")"

WIDTH="$(echo "$RESOLUTION"| cut -f1 -dx)"

HEIGHT="$(echo "$RESOLUTION"| cut -f2 -dx)"

WINDOW_HEIGHT="$(($HEIGHT - $(($HEIGHT / 3))))"

WINDOW_WIDTH="$(($WIDTH - $(($WIDTH / 3))))"

for i in "$HOME/.config/konsolerc" "$HOME/.config/dolphinrc"; do

    if [ -e "$i" ] && [ "$(grep "$RESOLUTION" "$i")" = "" ]; then

        kwriteconfig5 --group "MainWindow" --key "$SCREEN Height $RESOLUTION" --file "$i" "$WINDOW_HEIGHT"
        
        kwriteconfig5 --group "MainWindow" --key "$SCREEN Width $RESOLUTION" --file "$i" "$WINDOW_WIDTH"
        
        kwriteconfig5 --group "MainWindow" --key "$SCREEN YPosition $RESOLUTION" --file "$i" "$WINDOW_HEIGHT"

        kwriteconfig5 --group "MainWindow" --key "$SCREEN XPosition $RESOLUTION" --file "$i" "$WINDOW_WIDTH"

    fi

done

/usr/lib/pam_kwallet_init &

export KWIN_EFFECTS_FORCE_ANIMATIONS=1
export MULTIKDE=$nowlogin



# Fix to GTK4 theme
if [ "$(grep gtk-application-prefer-dark-theme=true ~/.config/gtk-3.0/settings.ini)" = "" ]; then
    export GTK_THEME=$(grep gtk-theme-name= ~/.config/gtk-3.0/settings.ini | cut -f2 -d=)
else
    export GTK_THEME=$(grep gtk-theme-name= ~/.config/gtk-3.0/settings.ini | cut -f2 -d=):dark
fi


# Change way to autostart latte
#rm -f ~/.config/autostart/org.kde.latte-dock.desktop

> $HOME/.config/autostart/org.kde.latte-dock.desktop
# Remove link to sistray tweaks to latte
if [ -L "$HOME/.local/share/plasma/plasmoids/org.kde.plasma.systemtray" ]; then
  rm -f "$HOME/.local/share/plasma/plasmoids/org.kde.plasma.systemtray"
  rm -f "$HOME/.local/share/plasma/plasmoids/org.kde.plasma.private.systemtray"
fi


if [ "$(cat "$HOME/.config/enable_latte")" = "1" ]; then
    systemctl --user start lattedock
fi

if [ -e "$HOME/.config/kdelight" ]; then
    QT_QUICK_BACKEND=software QSG_RENDER_LOOP=basic exec $STARTPLASMA
else
    exec $STARTPLASMA
fi

if [ -e /usr/share/kconf_update/kwin-5.23-remove-cover-switch.py ]; then
    rm /usr/share/kconf_update/kwin-5.23-remove-cover-switch.py
fi

#killall feh
#sleep 20
#feh --bg-fill "/usr/share/sddm/themes/breeze/black.jpg" &
#sleep 2
#killall feh
