{"C":{"plural-forms":"nplurals=2; plural=(n != 1);","messages":{"Desktop":{"*":["Вы являетесь экспертом по переводу с фокусом на языки программирования и техническую документацию. Пожалуйста, переведите следующий текст с en-US на ru, обеспечивая точный перевод всех технических терминов и конструкций программирования:\n\nРабочий стол"]},"Theme":{"*":[": \"Introduction to Object-Oriented Programming\"\n\nТема: \"Введение в объектно-ориентированное программирование\"\n\nObject-oriented programming (OOP) is a popular programming paradigm that is used to organize and structure code. It is based on the concept of objects, which are data structures that contain both data and methods for manipulating that data. OOP allows for the creation of reusable code and promotes modularity and flexibility in software development.\n\nОбъектно-ориентированное программирование (ООП) - это популярная парадигма программирования, которая используется для организации и структурирования кода. Она основана на концепции объектов, которые являются структурами данных, содержащими как данные, так и методы для их обработки. ООП позволяет создавать повторно используемый код и способствует модульности и гибкости в разработке программного обеспечения."]},"Configuration":{"*":["file\n\nФайл конфигурации"]},"You've used this desktop before, do you want to restore your customization or use the original configuration?":{"*":["Вы уже использовали этот рабочий стол ранее, хотите восстановить свои настройки или использовать оригинальную конфигурацию?"]},"Original":{"*":["text:\n\n\"In object-oriented programming, inheritance is the process of creating new classes from existing classes. The new classes, known as subclasses, inherit the properties and methods of the parent class, known as the superclass. This allows for code reuse and the creation of more specialized classes.\"\n\nПеревод:\n\n\"В объектно-ориентированном программировании наследование - это процесс создания новых классов из существующих классов. Новые классы, известные как подклассы, наследуют свойства и методы родительского класса, известного как суперкласс. Это позволяет повторно использовать код и создавать более специализированные классы.\""]},"Restore":{"*":["the default settings\n\nВосстановить настройки по умолчанию"]},"Applying":{"*":["Filters\n\nПрименение фильтров\n\nTo apply filters to your data, you can use the filter() function. This function takes in two arguments: a column name and a filter condition. The column name should be a string and the filter condition should be a logical expression.\n\nДля применения фильтров к вашим данным вы можете использовать функцию filter(). Эта функция принимает два аргумента: имя столбца и условие фильтра. Имя столбца должно быть строкой, а условие фильтра - логическим выражением."]},"The settings have been changed. To apply them throughout the system, log off and log in again.":{"*":["Настройки были изменены. Чтобы применить их во всей системе, выйдите из системы и снова войдите."]},"OK":{"*":[", here is the text:\n\n\"In programming, a loop is a control structure that allows a set of instructions to be executed repeatedly until a certain condition is met. There are different types of loops, such as for loops, while loops, and do-while loops. Each type has its own syntax and use cases. Loops are commonly used for iterating through data structures, performing calculations, and controlling program flow.\"\n\nВ программировании цикл - это структура управления, которая позволяет выполнять набор инструкций повторно до тех пор, пока не будет выполнено определенное условие. Существует различные типы циклов, такие как циклы for, while и do-while. Каждый тип имеет свой синтаксис и область применения. Циклы часто используются для итерации по структурам данных, выполнения вычислений и управления потоком программы."]}}}}