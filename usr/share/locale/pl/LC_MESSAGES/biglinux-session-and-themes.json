{"C":{"plural-forms":"nplurals=2; plural=(n != 1);","messages":{"Desktop":{"*":["Application\n\nAplikacja na pulpit"]},"Theme":{"*":[":\n\nTemat:"]},"Configuration":{"*":["File\n\nPlik konfiguracyjny"]},"You've used this desktop before, do you want to restore your customization or use the original configuration?":{"*":["Używałeś już tego pulpitu wcześniej, czy chcesz przywrócić swoje dostosowania czy użyć oryginalnej konfiguracji?"]},"Original":{"*":["text:\n\n\"You can use a for loop to iterate through a list of items and perform a specific action on each item. The syntax for a for loop in Python is: for item in list:\"\n\n\"Możesz użyć pętli for do iteracji przez listę elementów i wykonania określonej akcji na każdym z nich. Składnia pętli for w języku Python to: for item in list:\""]},"Restore":{"*":["the database\n\nPrzywróć bazę danych"]},"Applying":{"*":["Filters\n\nStosuj filtry\n\nFiltry są narzędziem, które pozwalają na wybieranie i przetwarzanie danych w celu uzyskania pożądanych wyników. W przypadku programowania, filtry są często wykorzystywane do przetwarzania kolekcji danych, takich jak tablice lub listy.\n\nAby zastosować filtr, należy najpierw określić kryteria, według których chcesz przefiltrować dane. Następnie należy zastosować te kryteria do kolekcji danych, aby uzyskać nową kolekcję zawierającą tylko te elementy, które spełniają określone warunki.\n\nW programowaniu, filtry są często wykorzystywane w połączeniu z pętlami, aby przetwarzać każdy element kolekcji i sprawdzić, czy spełnia on określone kryteria. Jeśli tak, element ten zostanie dodany do nowej kolekcji, w przeciwnym razie zostanie pominięty.\n\nPrzykład użycia filtrów w języku Java:\n\nList<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5);\n\nList<Integer> evenNumbers = numbers.stream()\n                                    .filter(n -> n % 2 == 0)\n                                    .collect(Collectors.toList());\n\nW powyższym przykładzie, zastosowano filtr, który wybiera tylko parzyste liczby z listy \"numbers\" i tworzy nową listę \"evenNumbers\" zawierającą tylko te liczby.\n\nW programowaniu, umiejętne stosowanie filtrów może znacznie ułatwić przetwarzanie danych i pomóc w uzyskaniu pożądanych wyników.\n\nApplying Filters\n\nZastosowanie filtrów\n\nFiltry są narzędziem, które umożliwiają wybieranie i przetwarzanie danych w celu uzyskania pożądanych wyników. W programowaniu, filtry są często wykorzystywane do przetwarzania kolekcji danych, takich jak tablice lub listy.\n\nAby zastosować filtr, należy najpierw określić kryteria, według których chcesz przefiltrować dane. Następnie należy zastosować te kryteria do kolekcji danych, aby uzyskać nową kolekcję zawierającą tylko te elementy, które spełniają określone warunki.\n\nW programowaniu, filtry są często wykorzystywane w połączeniu z pętlami, aby przetwarzać każdy element kolekcji i sprawdzić, czy spełnia on określone kryteria. Jeśli tak, element ten zostanie dodany do nowej kolekcji, w przeciwnym razie zostanie pominięty.\n\nPrzykład użycia filtrów w języku Java:\n\nList<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5);\n\nList<Integer> evenNumbers = numbers.stream()\n                                    .filter(n -> n % 2 == 0)\n                                    .collect(Collectors.toList());\n\nW powyższym przykładzie, zastosowano filtr, który wybiera tylko parzyste liczby z listy \"numbers\" i tworzy nową listę \"evenNumbers\" zawierającą tylko te liczby.\n\nW programowaniu, umiejętne stosowanie filtrów może znacznie ułatwić przetwarzanie danych i pomóc w uzyskaniu pożądanych wyników."]},"The settings have been changed. To apply them throughout the system, log off and log in again.":{"*":["Ustawienia zostały zmienione. Aby je zastosować w całym systemie, wyloguj się i zaloguj ponownie."]},"OK":{"*":["Jesteś ekspertem od tłumaczeń z naciskiem na języki programowania i dokumentację techniczną. Proszę przetłumacz następujący tekst z en-US na pl, upewniając się, że wszystkie terminy techniczne i konstrukcje programistyczne są dokładnie przetłumaczone:\n Ok"]}}}}