# This is a basic workflow to help you get started with Actions

name: Big-Makepkg-Stable

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "stable" ]
  pull_request:
    branches: [ "stable" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Makepkg Build and Check
        id: makepkg
        # You may pin to the exact commit or the version.
        # uses: edlanglois/pkgbuild-action@5bb737e69e6a5a171327e6bcf8adace04814685c
        uses: biglinux/biglinux-pkg-action@main
        with:
          package: pkgbuild
          branch: stable
          gpg-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.PASSPHRASE }}
    
      - name: Create local changes
        run: git add pkgbuild/PKGBUILD
        
      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "pkgrel+1" -a  
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
        
      - name: publish package
        shell: bash -O extglob {0}
        run: |
          release=$(find . -name *.zst | cut -d "/" -f2)
          echo ${{ github.token }} | gh auth login --with-token
          gh release create ${release} --title ${release} --repo ${{ github.repository }} --notes "automated release" || echo "release already exists"
          GITHUB_LINK=https://github.com/${GITHUB_REPOSITORY}/releases/download/${release}
          for i in .zst .sig .tar; do
          find -iname *$i -exec gh release upload ${release} --repo ${GITHUB_REPOSITORY} --clobber {} \;
          done
          
          
          
        
      #- name: prepare upload
        #shell: bash
        #run: |
          #echo "## ssh setup"
          #mkdir -p /home/runner/.ssh
          #touch /home/runner/.ssh/github_actions
          #chmod 600 /home/runner/.ssh/github_actions
          #ssh-agent -a /tmp/ssh_agent.sock > /dev/null
      #- name: push to boxit
        #shell: bash -O extglob {0}
        #env:
          #SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        #run: |
          #if [ -z "${{ inputs.boxit-host }}" ] || [ -z "${{ inputs.boxit-target }}" ] || [ -z "${{ inputs.ssh-key }}" ]; then 
            #echo "## not (all) credentials given for boxit push"
            #exit 0
          #fi
          #ssh-keyscan -t rsa ${{ inputs.boxit-host }} >> /home/runner/.ssh/known_hosts
          #echo "${{ inputs.ssh-key }}" >> /home/runner/.ssh/github_actions
          #ssh-add /home/runner/.ssh/github_actions
          #rsync -vaPzz --stats -e ssh ./*tar ${{ inputs.boxit-target }}
        
        
#      - name: upload-cdn77
#        shell: bash -O extglob {0}
#        run: |
#          # if is not yet supported in composite https://github.com/actions/runner/blob/main/docs/adrs/0549-composite-run-steps.md#if-condition
#          if [ -z "${{ inputs.cdn77-host }}" ] || [ -z "${{ inputs.cdn77-user }}" ] || [ -z "${{ inputs.cdn77-pwd }}" ]; then 
#            echo "## not (all) credentials given for cdn77 upload"
#            exit 0
#          fi
#          
#          echo "## cdn77 upload"
#          
#          ssh-keyscan -t rsa ${{ inputs.cdn77-host }} >> /home/runner/.ssh/known_hosts
#          ## create target dir
#          sshpass -p "${{ inputs.cdn77-pwd }}" rsync -vaP --stats -e ssh ${{ inputs.edition }} \
#            ${{ inputs.cdn77-user }}@${{ inputs.cdn77-host }}:/www/
#          # upload
#          sshpass -p "${{ inputs.cdn77-pwd }}" rsync -vaP \
#            --stats -e ssh ${{ steps.upload-prepare.outputs.upload-files }} \
#            ${{ inputs.cdn77-user }}@${{ inputs.cdn77-host }}:/www/${{ inputs.edition }}/${{ inputs.version }}/

